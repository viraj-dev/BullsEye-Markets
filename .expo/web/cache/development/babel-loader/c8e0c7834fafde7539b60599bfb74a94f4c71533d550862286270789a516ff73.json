{"ast":null,"code":"'use strict';\n\nfunction peg$subclass(child, parent) {\n  function C() {\n    this.constructor = child;\n  }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = 'SyntaxError';\n  return self;\n}\npeg$subclass(peg$SyntaxError, Error);\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || ' ';\n  if (str.length > targetLength) {\n    return str;\n  }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\npeg$SyntaxError.prototype.format = function (sources) {\n  var str = 'Error: ' + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s = this.location.source && typeof this.location.source.offset === 'function' ? this.location.source.offset(s) : s;\n    var loc = this.location.source + ':' + offset_s.line + ':' + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd('', offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = last - s.column || 1;\n      str += '\\n --> ' + loc + '\\n' + filler + ' |\\n' + offset_s.line + ' | ' + line + '\\n' + filler + ' | ' + peg$padEnd('', s.column - 1, ' ') + peg$padEnd('', hatLen, '^');\n    } else {\n      str += '\\n at ' + loc;\n    }\n  }\n  return str;\n};\npeg$SyntaxError.buildMessage = function (expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function (expectation) {\n      return '\"' + literalEscape(expectation.text) + '\"';\n    },\n    class: function (expectation) {\n      var escapedParts = expectation.parts.map(function (part) {\n        return Array.isArray(part) ? classEscape(part[0]) + '-' + classEscape(part[1]) : classEscape(part);\n      });\n      return '[' + (expectation.inverted ? '^' : '') + escapedParts.join('') + ']';\n    },\n    any: function () {\n      return 'any character';\n    },\n    end: function () {\n      return 'end of input';\n    },\n    other: function (expectation) {\n      return expectation.description;\n    }\n  };\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n  function literalEscape(s) {\n    return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n      return '\\\\x0' + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return '\\\\x' + hex(ch);\n    });\n  }\n  function classEscape(s) {\n    return s.replace(/\\\\/g, '\\\\\\\\').replace(/\\]/g, '\\\\]').replace(/\\^/g, '\\\\^').replace(/-/g, '\\\\-').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n      return '\\\\x0' + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return '\\\\x' + hex(ch);\n    });\n  }\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n    descriptions.sort();\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n      case 2:\n        return descriptions[0] + ' or ' + descriptions[1];\n      default:\n        return descriptions.slice(0, -1).join(', ') + ', or ' + descriptions[descriptions.length - 1];\n    }\n  }\n  function describeFound(found) {\n    return found ? '\"' + literalEscape(found) + '\"' : 'end of input';\n  }\n  return 'Expected ' + describeExpected(expected) + ' but ' + describeFound(found) + ' found.';\n};\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n  var peg$startRuleFunctions = {\n    start: peg$parsestart\n  };\n  var peg$startRuleFunction = peg$parsestart;\n  var peg$c0 = 'matrix(';\n  var peg$c1 = ')';\n  var peg$c2 = 'translate(';\n  var peg$c3 = 'scale(';\n  var peg$c4 = 'rotate(';\n  var peg$c5 = 'skewX(';\n  var peg$c6 = 'skewY(';\n  var peg$c7 = '.';\n  var peg$c8 = 'e';\n  var peg$r0 = /^[ \\t\\n\\r,]/;\n  var peg$r1 = /^[ \\t\\n\\r]/;\n  var peg$r2 = /^[+\\-]/;\n  var peg$r3 = /^[0-9]/;\n  var peg$e0 = peg$otherExpectation('transform functions');\n  var peg$e1 = peg$otherExpectation('transformFunctions');\n  var peg$e2 = peg$otherExpectation('transform function');\n  var peg$e3 = peg$otherExpectation('matrix');\n  var peg$e4 = peg$literalExpectation('matrix(', false);\n  var peg$e5 = peg$literalExpectation(')', false);\n  var peg$e6 = peg$otherExpectation('translate');\n  var peg$e7 = peg$literalExpectation('translate(', false);\n  var peg$e8 = peg$otherExpectation('scale');\n  var peg$e9 = peg$literalExpectation('scale(', false);\n  var peg$e10 = peg$otherExpectation('rotate');\n  var peg$e11 = peg$literalExpectation('rotate(', false);\n  var peg$e12 = peg$otherExpectation('x, y');\n  var peg$e13 = peg$otherExpectation('skewX');\n  var peg$e14 = peg$literalExpectation('skewX(', false);\n  var peg$e15 = peg$otherExpectation('skewY');\n  var peg$e16 = peg$literalExpectation('skewY(', false);\n  var peg$e17 = peg$otherExpectation('space or comma');\n  var peg$e18 = peg$classExpectation([' ', '\\t', '\\n', '\\r', ','], false, false);\n  var peg$e19 = peg$otherExpectation('whitespace');\n  var peg$e20 = peg$classExpectation([' ', '\\t', '\\n', '\\r'], false, false);\n  var peg$e21 = peg$classExpectation(['+', '-'], false, false);\n  var peg$e22 = peg$classExpectation([['0', '9']], false, false);\n  var peg$e23 = peg$literalExpectation('.', false);\n  var peg$e24 = peg$literalExpectation('e', false);\n  var peg$f0 = function (head, tail) {\n    const results = Array.isArray(head) ? head : [head];\n    tail.forEach(element => {\n      if (Array.isArray(element[1])) {\n        results.push(...element[1]);\n      } else {\n        results.push(element[1]);\n      }\n    });\n    return results;\n  };\n  var peg$f1 = function (a, b, c, d, e, f, g, h, i) {\n    return {\n      matrix: [a, b, c, d, e, f, g, h, i]\n    };\n  };\n  var peg$f2 = function (x, y) {\n    if (y == undefined) {\n      return {\n        translate: x\n      };\n    }\n    return {\n      translate: [x, y]\n    };\n  };\n  var peg$f3 = function (x, y) {\n    if (y == undefined) {\n      return {\n        scale: x\n      };\n    }\n    return [{\n      scaleX: x\n    }, {\n      scaleY: y\n    }];\n  };\n  var peg$f4 = function (x, yz) {\n    if (yz !== null) {\n      return {\n        rotate: `${x}deg`\n      };\n    }\n    return [{\n      rotate: `${x}deg`\n    }];\n  };\n  var peg$f5 = function (y, z) {\n    return [y, z];\n  };\n  var peg$f6 = function (x) {\n    return [{\n      skewX: `${x}deg`\n    }];\n  };\n  var peg$f7 = function (y) {\n    return [{\n      skewY: `${y}deg`\n    }];\n  };\n  var peg$f8 = function () {\n    return parseFloat(text());\n  };\n  var peg$currPos = options.peg$currPos | 0;\n  var peg$savedPos = peg$currPos;\n  var peg$posDetailsCache = [{\n    line: 1,\n    column: 1\n  }];\n  var peg$maxFailPos = peg$currPos;\n  var peg$maxFailExpected = options.peg$maxFailExpected || [];\n  var peg$silentFails = options.peg$silentFails | 0;\n  var peg$result;\n  if (options.startRule) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error('Can\\'t start parsing from rule \"' + options.startRule + '\".');\n    }\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n  function offset() {\n    return peg$savedPos;\n  }\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n  function expected(description, location) {\n    location = location !== undefined ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location);\n  }\n  function error(message, location) {\n    location = location !== undefined ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildSimpleError(message, location);\n  }\n  function peg$literalExpectation(text, ignoreCase) {\n    return {\n      type: 'literal',\n      text: text,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return {\n      type: 'class',\n      parts: parts,\n      inverted: inverted,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$anyExpectation() {\n    return {\n      type: 'any'\n    };\n  }\n  function peg$endExpectation() {\n    return {\n      type: 'end'\n    };\n  }\n  function peg$otherExpectation(description) {\n    return {\n      type: 'other',\n      description: description\n    };\n  }\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n    if (details) {\n      return details;\n    } else {\n      if (pos >= peg$posDetailsCache.length) {\n        p = peg$posDetailsCache.length - 1;\n      } else {\n        p = pos;\n        while (!peg$posDetailsCache[--p]) {}\n      }\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n        p++;\n      }\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n    if (offset && peg$source && typeof peg$source.offset === 'function') {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n    peg$maxFailExpected.push(expected);\n  }\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n  }\n  function peg$parsestart() {\n    var s0, s1;\n    peg$silentFails++;\n    s0 = peg$parsetransformFunctions();\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e0);\n      }\n    }\n    return s0;\n  }\n  function peg$parsetransformFunctions() {\n    var s0, s1, s2, s3, s4, s5;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsefunction();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      s5 = peg$parsefunction();\n      if (s5 !== peg$FAILED) {\n        s4 = [s4, s5];\n        s3 = s4;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        s5 = peg$parsefunction();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f0(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e1);\n      }\n    }\n    return s0;\n  }\n  function peg$parsefunction() {\n    var s0, s1;\n    peg$silentFails++;\n    s0 = peg$parsematrix();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetranslate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsescale();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parserotate();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseskewX();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseskewY();\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e2);\n      }\n    }\n    return s0;\n  }\n  function peg$parsematrix() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 7) === peg$c0) {\n      s2 = peg$c0;\n      peg$currPos += 7;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e4);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsespaceOrComma();\n        s6 = peg$parseNUM();\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsespaceOrComma();\n          s8 = peg$parseNUM();\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parsespaceOrComma();\n            s10 = peg$parseNUM();\n            if (s10 !== peg$FAILED) {\n              s11 = peg$parsespaceOrComma();\n              s12 = peg$parseNUM();\n              if (s12 !== peg$FAILED) {\n                s13 = peg$parsespaceOrComma();\n                s14 = peg$parseNUM();\n                if (s14 !== peg$FAILED) {\n                  s15 = peg$parsespaceOrComma();\n                  s16 = peg$parseNUM();\n                  if (s16 !== peg$FAILED) {\n                    s17 = peg$parsespaceOrComma();\n                    s18 = peg$parseNUM();\n                    if (s18 !== peg$FAILED) {\n                      s19 = peg$parsespaceOrComma();\n                      s20 = peg$parseNUM();\n                      if (s20 !== peg$FAILED) {\n                        s21 = peg$parse_();\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s22 = peg$c1;\n                          peg$currPos++;\n                        } else {\n                          s22 = peg$FAILED;\n                          if (peg$silentFails === 0) {\n                            peg$fail(peg$e5);\n                          }\n                        }\n                        if (s22 !== peg$FAILED) {\n                          s23 = peg$parse_();\n                          peg$savedPos = s0;\n                          s0 = peg$f1(s4, s6, s8, s10, s12, s14, s16, s18, s20);\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e3);\n      }\n    }\n    return s0;\n  }\n  function peg$parsetranslate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 10) === peg$c2) {\n      s2 = peg$c2;\n      peg$currPos += 10;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e7);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsespaceOrComma();\n        s6 = peg$parseNUM();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        s7 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s8 = peg$c1;\n          peg$currPos++;\n        } else {\n          s8 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s8 !== peg$FAILED) {\n          s9 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f2(s4, s6);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e6);\n      }\n    }\n    return s0;\n  }\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 6) === peg$c3) {\n      s2 = peg$c3;\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e9);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsespaceOrComma();\n        s6 = peg$parseNUM();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        s7 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s8 = peg$c1;\n          peg$currPos++;\n        } else {\n          s8 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s8 !== peg$FAILED) {\n          s9 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f3(s4, s6);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e8);\n      }\n    }\n    return s0;\n  }\n  function peg$parserotate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 7) === peg$c4) {\n      s2 = peg$c4;\n      peg$currPos += 7;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e11);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsetwoNumbers();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s7 = peg$c1;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s7 !== peg$FAILED) {\n          s8 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f4(s4, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e10);\n      }\n    }\n    return s0;\n  }\n  function peg$parsetwoNumbers() {\n    var s0, s1, s2, s3, s4;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsespaceOrComma();\n    s2 = peg$parseNUM();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsespaceOrComma();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f5(s2, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e12);\n      }\n    }\n    return s0;\n  }\n  function peg$parseskewX() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 6) === peg$c5) {\n      s2 = peg$c5;\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e14);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s6 = peg$c1;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f6(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e13);\n      }\n    }\n    return s0;\n  }\n  function peg$parseskewY() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 6) === peg$c6) {\n      s2 = peg$c6;\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e16);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s6 = peg$c1;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f7(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e15);\n      }\n    }\n    return s0;\n  }\n  function peg$parsespaceOrComma() {\n    var s0, s1;\n    peg$silentFails++;\n    s0 = [];\n    s1 = input.charAt(peg$currPos);\n    if (peg$r0.test(s1)) {\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e18);\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = input.charAt(peg$currPos);\n      if (peg$r0.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e18);\n        }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) {\n      peg$fail(peg$e17);\n    }\n    return s0;\n  }\n  function peg$parse_() {\n    var s0, s1;\n    peg$silentFails++;\n    s0 = [];\n    s1 = input.charAt(peg$currPos);\n    if (peg$r1.test(s1)) {\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e20);\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = input.charAt(peg$currPos);\n      if (peg$r1.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e20);\n        }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) {\n      peg$fail(peg$e19);\n    }\n    return s0;\n  }\n  function peg$parseNUM() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    s0 = peg$currPos;\n    s1 = input.charAt(peg$currPos);\n    if (peg$r2.test(s1)) {\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e21);\n      }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = peg$currPos;\n    s3 = [];\n    s4 = input.charAt(peg$currPos);\n    if (peg$r3.test(s4)) {\n      peg$currPos++;\n    } else {\n      s4 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e22);\n      }\n    }\n    while (s4 !== peg$FAILED) {\n      s3.push(s4);\n      s4 = input.charAt(peg$currPos);\n      if (peg$r3.test(s4)) {\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e22);\n        }\n      }\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s4 = peg$c7;\n      peg$currPos++;\n    } else {\n      s4 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e23);\n      }\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = [];\n      s6 = input.charAt(peg$currPos);\n      if (peg$r3.test(s6)) {\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e22);\n        }\n      }\n      if (s6 !== peg$FAILED) {\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          s6 = input.charAt(peg$currPos);\n          if (peg$r3.test(s6)) {\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e22);\n            }\n          }\n        }\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s3 = [s3, s4, s5];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = [];\n      s3 = input.charAt(peg$currPos);\n      if (peg$r3.test(s3)) {\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e22);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = input.charAt(peg$currPos);\n          if (peg$r3.test(s3)) {\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e22);\n            }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 101) {\n        s4 = peg$c8;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e24);\n        }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = input.charAt(peg$currPos);\n        if (peg$r2.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e21);\n          }\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = [];\n        s7 = input.charAt(peg$currPos);\n        if (peg$r3.test(s7)) {\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e22);\n          }\n        }\n        if (s7 !== peg$FAILED) {\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = input.charAt(peg$currPos);\n            if (peg$r3.test(s7)) {\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e22);\n              }\n            }\n          }\n        } else {\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s4 = [s4, s5, s6];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f8();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  peg$result = peg$startRuleFunction();\n  if (options.peg$library) {\n    return {\n      peg$result,\n      peg$currPos,\n      peg$FAILED,\n      peg$maxFailExpected,\n      peg$maxFailPos\n    };\n  }\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n    throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n  }\n}\nmodule.exports = {\n  StartRules: ['start'],\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};","map":{"version":3,"names":["peg$subclass","child","parent","C","constructor","prototype","peg$SyntaxError","message","expected","found","location","self","Error","call","Object","setPrototypeOf","name","peg$padEnd","str","targetLength","padString","length","repeat","slice","format","sources","src","k","source","text","split","s","start","offset_s","offset","loc","line","column","e","end","filler","toString","last","hatLen","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","join","any","other","description","hex","ch","charCodeAt","toUpperCase","replace","describeExpectation","type","describeExpected","descriptions","i","j","sort","describeFound","peg$parse","input","options","undefined","peg$FAILED","peg$source","grammarSource","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$r0","peg$r1","peg$r2","peg$r3","peg$e0","peg$otherExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$literalExpectation","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$classExpectation","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$f0","head","tail","results","forEach","element","push","peg$f1","a","b","c","d","f","g","h","matrix","peg$f2","x","y","translate","peg$f3","scale","scaleX","scaleY","peg$f4","yz","rotate","peg$f5","z","peg$f6","skewX","peg$f7","skewY","peg$f8","parseFloat","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","range","peg$computeLocation","peg$buildStructuredError","error","peg$buildSimpleError","ignoreCase","peg$anyExpectation","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","res","peg$fail","s0","s1","peg$parsetransformFunctions","s2","s3","s4","s5","peg$parsefunction","peg$parse_","peg$parsematrix","peg$parsetranslate","peg$parsescale","peg$parserotate","peg$parseskewX","peg$parseskewY","s6","s7","s8","s9","s10","s11","s12","s13","s14","s15","s16","s17","s18","s19","s20","s21","s22","s23","substr","peg$parseNUM","peg$parsespaceOrComma","peg$parsetwoNumbers","charAt","test","peg$library","module","exports","StartRules","SyntaxError","parse"],"sources":["C:\\StockMarketApp2\\node_modules\\react-native-svg\\src\\lib\\extract\\transformToRn.js"],"sourcesContent":["// @generated by Peggy 4.0.3.\n//\n// https://peggyjs.org/\n\n'use strict';\n\nfunction peg$subclass(child, parent) {\n  function C() {\n    this.constructor = child;\n  }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = 'SyntaxError';\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || ' ';\n  if (str.length > targetLength) {\n    return str;\n  }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function (sources) {\n  var str = 'Error: ' + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s =\n      this.location.source && typeof this.location.source.offset === 'function'\n        ? this.location.source.offset(s)\n        : s;\n    var loc =\n      this.location.source + ':' + offset_s.line + ':' + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd('', offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = last - s.column || 1;\n      str +=\n        '\\n --> ' +\n        loc +\n        '\\n' +\n        filler +\n        ' |\\n' +\n        offset_s.line +\n        ' | ' +\n        line +\n        '\\n' +\n        filler +\n        ' | ' +\n        peg$padEnd('', s.column - 1, ' ') +\n        peg$padEnd('', hatLen, '^');\n    } else {\n      str += '\\n at ' + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function (expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function (expectation) {\n      return '\"' + literalEscape(expectation.text) + '\"';\n    },\n\n    class: function (expectation) {\n      var escapedParts = expectation.parts.map(function (part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + '-' + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return (\n        '[' + (expectation.inverted ? '^' : '') + escapedParts.join('') + ']'\n      );\n    },\n\n    any: function () {\n      return 'any character';\n    },\n\n    end: function () {\n      return 'end of input';\n    },\n\n    other: function (expectation) {\n      return expectation.description;\n    },\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g, '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g, function (ch) {\n        return '\\\\x0' + hex(ch);\n      })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return '\\\\x' + hex(ch);\n      });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g, '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g, function (ch) {\n        return '\\\\x0' + hex(ch);\n      })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n        return '\\\\x' + hex(ch);\n      });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + ' or ' + descriptions[1];\n\n      default:\n        return (\n          descriptions.slice(0, -1).join(', ') +\n          ', or ' +\n          descriptions[descriptions.length - 1]\n        );\n    }\n  }\n\n  function describeFound(found) {\n    return found ? '\"' + literalEscape(found) + '\"' : 'end of input';\n  }\n\n  return (\n    'Expected ' +\n    describeExpected(expected) +\n    ' but ' +\n    describeFound(found) +\n    ' found.'\n  );\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { start: peg$parsestart };\n  var peg$startRuleFunction = peg$parsestart;\n\n  var peg$c0 = 'matrix(';\n  var peg$c1 = ')';\n  var peg$c2 = 'translate(';\n  var peg$c3 = 'scale(';\n  var peg$c4 = 'rotate(';\n  var peg$c5 = 'skewX(';\n  var peg$c6 = 'skewY(';\n  var peg$c7 = '.';\n  var peg$c8 = 'e';\n\n  var peg$r0 = /^[ \\t\\n\\r,]/;\n  var peg$r1 = /^[ \\t\\n\\r]/;\n  var peg$r2 = /^[+\\-]/;\n  var peg$r3 = /^[0-9]/;\n\n  var peg$e0 = peg$otherExpectation('transform functions');\n  var peg$e1 = peg$otherExpectation('transformFunctions');\n  var peg$e2 = peg$otherExpectation('transform function');\n  var peg$e3 = peg$otherExpectation('matrix');\n  var peg$e4 = peg$literalExpectation('matrix(', false);\n  var peg$e5 = peg$literalExpectation(')', false);\n  var peg$e6 = peg$otherExpectation('translate');\n  var peg$e7 = peg$literalExpectation('translate(', false);\n  var peg$e8 = peg$otherExpectation('scale');\n  var peg$e9 = peg$literalExpectation('scale(', false);\n  var peg$e10 = peg$otherExpectation('rotate');\n  var peg$e11 = peg$literalExpectation('rotate(', false);\n  var peg$e12 = peg$otherExpectation('x, y');\n  var peg$e13 = peg$otherExpectation('skewX');\n  var peg$e14 = peg$literalExpectation('skewX(', false);\n  var peg$e15 = peg$otherExpectation('skewY');\n  var peg$e16 = peg$literalExpectation('skewY(', false);\n  var peg$e17 = peg$otherExpectation('space or comma');\n  var peg$e18 = peg$classExpectation(\n    [' ', '\\t', '\\n', '\\r', ','],\n    false,\n    false\n  );\n  var peg$e19 = peg$otherExpectation('whitespace');\n  var peg$e20 = peg$classExpectation([' ', '\\t', '\\n', '\\r'], false, false);\n  var peg$e21 = peg$classExpectation(['+', '-'], false, false);\n  var peg$e22 = peg$classExpectation([['0', '9']], false, false);\n  var peg$e23 = peg$literalExpectation('.', false);\n  var peg$e24 = peg$literalExpectation('e', false);\n\n  var peg$f0 = function (head, tail) {\n    const results = Array.isArray(head) ? head : [head];\n    tail.forEach((element) => {\n      if (Array.isArray(element[1])) {\n        results.push(...element[1]);\n      } else {\n        results.push(element[1]);\n      }\n    });\n    return results;\n  };\n  var peg$f1 = function (a, b, c, d, e, f, g, h, i) {\n    return { matrix: [a, b, c, d, e, f, g, h, i] };\n  };\n  var peg$f2 = function (x, y) {\n    if (y == undefined) {\n      return { translate: x };\n    }\n    return { translate: [x, y] };\n  };\n  var peg$f3 = function (x, y) {\n    if (y == undefined) {\n      return { scale: x };\n    }\n    return [{ scaleX: x }, { scaleY: y }];\n  };\n  var peg$f4 = function (x, yz) {\n    if (yz !== null) {\n      return { rotate: `${x}deg` };\n    }\n    return [{ rotate: `${x}deg` }];\n  };\n  var peg$f5 = function (y, z) {\n    return [y, z];\n  };\n  var peg$f6 = function (x) {\n    return [{ skewX: `${x}deg` }];\n  };\n  var peg$f7 = function (y) {\n    return [{ skewY: `${y}deg` }];\n  };\n  var peg$f8 = function () {\n    return parseFloat(text());\n  };\n  var peg$currPos = options.peg$currPos | 0;\n  var peg$savedPos = peg$currPos;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = peg$currPos;\n  var peg$maxFailExpected = options.peg$maxFailExpected || [];\n  var peg$silentFails = options.peg$silentFails | 0;\n\n  var peg$result;\n\n  if (options.startRule) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\n        'Can\\'t start parsing from rule \"' + options.startRule + '\".'\n      );\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos,\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location =\n      location !== undefined\n        ? location\n        : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location =\n      location !== undefined\n        ? location\n        : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: 'literal', text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return {\n      type: 'class',\n      parts: parts,\n      inverted: inverted,\n      ignoreCase: ignoreCase,\n    };\n  }\n\n  function peg$anyExpectation() {\n    return { type: 'any' };\n  }\n\n  function peg$endExpectation() {\n    return { type: 'end' };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: 'other', description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      if (pos >= peg$posDetailsCache.length) {\n        p = peg$posDetailsCache.length - 1;\n      } else {\n        p = pos;\n        while (!peg$posDetailsCache[--p]) {}\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column,\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column,\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column,\n      },\n    };\n    if (offset && peg$source && typeof peg$source.offset === 'function') {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parsetransformFunctions();\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e0);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetransformFunctions() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsefunction();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      s5 = peg$parsefunction();\n      if (s5 !== peg$FAILED) {\n        s4 = [s4, s5];\n        s3 = s4;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        s5 = peg$parsefunction();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f0(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e1);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefunction() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parsematrix();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetranslate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsescale();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parserotate();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseskewX();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseskewY();\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e2);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsematrix() {\n    var s0,\n      s1,\n      s2,\n      s3,\n      s4,\n      s5,\n      s6,\n      s7,\n      s8,\n      s9,\n      s10,\n      s11,\n      s12,\n      s13,\n      s14,\n      s15,\n      s16,\n      s17,\n      s18,\n      s19,\n      s20,\n      s21,\n      s22,\n      s23;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 7) === peg$c0) {\n      s2 = peg$c0;\n      peg$currPos += 7;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e4);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsespaceOrComma();\n        s6 = peg$parseNUM();\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsespaceOrComma();\n          s8 = peg$parseNUM();\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parsespaceOrComma();\n            s10 = peg$parseNUM();\n            if (s10 !== peg$FAILED) {\n              s11 = peg$parsespaceOrComma();\n              s12 = peg$parseNUM();\n              if (s12 !== peg$FAILED) {\n                s13 = peg$parsespaceOrComma();\n                s14 = peg$parseNUM();\n                if (s14 !== peg$FAILED) {\n                  s15 = peg$parsespaceOrComma();\n                  s16 = peg$parseNUM();\n                  if (s16 !== peg$FAILED) {\n                    s17 = peg$parsespaceOrComma();\n                    s18 = peg$parseNUM();\n                    if (s18 !== peg$FAILED) {\n                      s19 = peg$parsespaceOrComma();\n                      s20 = peg$parseNUM();\n                      if (s20 !== peg$FAILED) {\n                        s21 = peg$parse_();\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s22 = peg$c1;\n                          peg$currPos++;\n                        } else {\n                          s22 = peg$FAILED;\n                          if (peg$silentFails === 0) {\n                            peg$fail(peg$e5);\n                          }\n                        }\n                        if (s22 !== peg$FAILED) {\n                          s23 = peg$parse_();\n                          peg$savedPos = s0;\n                          s0 = peg$f1(s4, s6, s8, s10, s12, s14, s16, s18, s20);\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e3);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetranslate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 10) === peg$c2) {\n      s2 = peg$c2;\n      peg$currPos += 10;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e7);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsespaceOrComma();\n        s6 = peg$parseNUM();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        s7 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s8 = peg$c1;\n          peg$currPos++;\n        } else {\n          s8 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s8 !== peg$FAILED) {\n          s9 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f2(s4, s6);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e6);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 6) === peg$c3) {\n      s2 = peg$c3;\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e9);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsespaceOrComma();\n        s6 = peg$parseNUM();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        s7 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s8 = peg$c1;\n          peg$currPos++;\n        } else {\n          s8 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s8 !== peg$FAILED) {\n          s9 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f3(s4, s6);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e8);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parserotate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 7) === peg$c4) {\n      s2 = peg$c4;\n      peg$currPos += 7;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e11);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsetwoNumbers();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s7 = peg$c1;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s7 !== peg$FAILED) {\n          s8 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f4(s4, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e10);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetwoNumbers() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsespaceOrComma();\n    s2 = peg$parseNUM();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsespaceOrComma();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f5(s2, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e12);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewX() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 6) === peg$c5) {\n      s2 = peg$c5;\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e14);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s6 = peg$c1;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f6(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e13);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewY() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.substr(peg$currPos, 6) === peg$c6) {\n      s2 = peg$c6;\n      peg$currPos += 6;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e16);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNUM();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s6 = peg$c1;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e5);\n          }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parse_();\n          peg$savedPos = s0;\n          s0 = peg$f7(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e15);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsespaceOrComma() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = input.charAt(peg$currPos);\n    if (peg$r0.test(s1)) {\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e18);\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = input.charAt(peg$currPos);\n      if (peg$r0.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e18);\n        }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) {\n      peg$fail(peg$e17);\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = input.charAt(peg$currPos);\n    if (peg$r1.test(s1)) {\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e20);\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = input.charAt(peg$currPos);\n      if (peg$r1.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e20);\n        }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) {\n      peg$fail(peg$e19);\n    }\n\n    return s0;\n  }\n\n  function peg$parseNUM() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = input.charAt(peg$currPos);\n    if (peg$r2.test(s1)) {\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e21);\n      }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = peg$currPos;\n    s3 = [];\n    s4 = input.charAt(peg$currPos);\n    if (peg$r3.test(s4)) {\n      peg$currPos++;\n    } else {\n      s4 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e22);\n      }\n    }\n    while (s4 !== peg$FAILED) {\n      s3.push(s4);\n      s4 = input.charAt(peg$currPos);\n      if (peg$r3.test(s4)) {\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e22);\n        }\n      }\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s4 = peg$c7;\n      peg$currPos++;\n    } else {\n      s4 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e23);\n      }\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = [];\n      s6 = input.charAt(peg$currPos);\n      if (peg$r3.test(s6)) {\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e22);\n        }\n      }\n      if (s6 !== peg$FAILED) {\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          s6 = input.charAt(peg$currPos);\n          if (peg$r3.test(s6)) {\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e22);\n            }\n          }\n        }\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s3 = [s3, s4, s5];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = [];\n      s3 = input.charAt(peg$currPos);\n      if (peg$r3.test(s3)) {\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e22);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = input.charAt(peg$currPos);\n          if (peg$r3.test(s3)) {\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e22);\n            }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 101) {\n        s4 = peg$c8;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e24);\n        }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = input.charAt(peg$currPos);\n        if (peg$r2.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e21);\n          }\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = [];\n        s7 = input.charAt(peg$currPos);\n        if (peg$r3.test(s7)) {\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e22);\n          }\n        }\n        if (s7 !== peg$FAILED) {\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = input.charAt(peg$currPos);\n            if (peg$r3.test(s7)) {\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e22);\n              }\n            }\n          }\n        } else {\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s4 = [s4, s5, s6];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f8();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (options.peg$library) {\n    return /** @type {any} */ ({\n      peg$result,\n      peg$currPos,\n      peg$FAILED,\n      peg$maxFailExpected,\n      peg$maxFailPos,\n    });\n  }\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  StartRules: ['start'],\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}