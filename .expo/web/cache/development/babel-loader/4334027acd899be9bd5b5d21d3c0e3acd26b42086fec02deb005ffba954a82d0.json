{"ast":null,"code":"import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport StockDetailScreen from \"./screens/StockDetailScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  console.log('App is rendering...');\n  return _jsx(SafeAreaProvider, {\n    children: _jsxs(NavigationContainer, {\n      fallback: _jsx(Text, {\n        children: \"Loading...\"\n      }),\n      children: [_jsxs(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: 'Stock Market App',\n            headerStyle: {\n              backgroundColor: '#007AFF'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n              fontWeight: 'bold'\n            }\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"StockDetail\",\n          component: StockDetailScreen,\n          options: function options(_ref) {\n            var _route$params;\n            var route = _ref.route;\n            return {\n              title: ((_route$params = route.params) == null ? void 0 : _route$params.symbol) || 'Stock Details',\n              headerStyle: {\n                backgroundColor: '#007AFF'\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold'\n              }\n            };\n          }\n        })]\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","StatusBar","View","Text","NavigationContainer","createNativeStackNavigator","SafeAreaProvider","HomeScreen","StockDetailScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","console","log","children","fallback","Navigator","initialRouteName","Screen","name","component","options","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","_ref","_route$params","route","params","symbol","style"],"sources":["C:/StockMarketApp2/App.js"],"sourcesContent":["import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { View, Text } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport StockDetailScreen from './screens/StockDetailScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  console.log('App is rendering...'); // Debug log\r\n\r\n  return (\r\n    <SafeAreaProvider>\r\n      <NavigationContainer fallback={<Text>Loading...</Text>}>\r\n        <Stack.Navigator initialRouteName=\"Home\">\r\n          <Stack.Screen \r\n            name=\"Home\" \r\n            component={HomeScreen} \r\n            options={{ \r\n              title: 'Stock Market App',\r\n              headerStyle: {\r\n                backgroundColor: '#007AFF',\r\n              },\r\n              headerTintColor: '#fff',\r\n              headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n              },\r\n            }}\r\n          />\r\n          <Stack.Screen \r\n            name=\"StockDetail\" \r\n            component={StockDetailScreen} \r\n            options={({ route }) => ({ \r\n              title: route.params?.symbol || 'Stock Details',\r\n              headerStyle: {\r\n                backgroundColor: '#007AFF',\r\n              },\r\n              headerTintColor: '#fff',\r\n              headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n              },\r\n            })}\r\n          />\r\n        </Stack.Navigator>\r\n        <StatusBar style=\"auto\" />\r\n      </NavigationContainer>\r\n    </SafeAreaProvider>\r\n  );\r\n} "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,OAAOC,UAAU;AACjB,OAAOC,iBAAiB;AAAoC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE5D,IAAMC,KAAK,GAAGR,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASS,GAAGA,CAAA,EAAG;EAC5BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAElC,OACEN,IAAA,CAACJ,gBAAgB;IAAAW,QAAA,EACfL,KAAA,CAACR,mBAAmB;MAACc,QAAQ,EAAER,IAAA,CAACP,IAAI;QAAAc,QAAA,EAAC;MAAU,CAAM,CAAE;MAAAA,QAAA,GACrDL,KAAA,CAACC,KAAK,CAACM,SAAS;QAACC,gBAAgB,EAAC,MAAM;QAAAH,QAAA,GACtCP,IAAA,CAACG,KAAK,CAACQ,MAAM;UACXC,IAAI,EAAC,MAAM;UACXC,SAAS,EAAEhB,UAAW;UACtBiB,OAAO,EAAE;YACPC,KAAK,EAAE,kBAAkB;YACzBC,WAAW,EAAE;cACXC,eAAe,EAAE;YACnB,CAAC;YACDC,eAAe,EAAE,MAAM;YACvBC,gBAAgB,EAAE;cAChBC,UAAU,EAAE;YACd;UACF;QAAE,CACH,CAAC,EACFpB,IAAA,CAACG,KAAK,CAACQ,MAAM;UACXC,IAAI,EAAC,aAAa;UAClBC,SAAS,EAAEf,iBAAkB;UAC7BgB,OAAO,EAAE,SAATA,OAAOA,CAAAO,IAAA;YAAA,IAAAC,aAAA;YAAA,IAAKC,KAAK,GAAAF,IAAA,CAALE,KAAK;YAAA,OAAQ;cACvBR,KAAK,EAAE,EAAAO,aAAA,GAAAC,KAAK,CAACC,MAAM,qBAAZF,aAAA,CAAcG,MAAM,KAAI,eAAe;cAC9CT,WAAW,EAAE;gBACXC,eAAe,EAAE;cACnB,CAAC;cACDC,eAAe,EAAE,MAAM;cACvBC,gBAAgB,EAAE;gBAChBC,UAAU,EAAE;cACd;YACF,CAAC;UAAA;QAAE,CACJ,CAAC;MAAA,CACa,CAAC,EAClBpB,IAAA,CAACT,SAAS;QAACmC,KAAK,EAAC;MAAM,CAAE,CAAC;IAAA,CACP;EAAC,CACN,CAAC;AAEvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}