{"ast":null,"code":"import Touchable from \"react-native-web/dist/exports/Touchable\";\nconst PRESS_RETENTION_OFFSET = {\n  top: 20,\n  left: 20,\n  right: 20,\n  bottom: 30\n};\nconst {\n  Mixin\n} = Touchable;\nconst {\n  touchableHandleStartShouldSetResponder,\n  touchableHandleResponderTerminationRequest,\n  touchableHandleResponderGrant,\n  touchableHandleResponderMove,\n  touchableHandleResponderRelease,\n  touchableHandleResponderTerminate,\n  touchableGetInitialState\n} = Mixin;\nconst SvgTouchableMixin = Object.assign({}, Mixin, {\n  touchableHandleStartShouldSetResponder(e) {\n    const {\n      onStartShouldSetResponder\n    } = this.props;\n    if (onStartShouldSetResponder) {\n      return onStartShouldSetResponder(e);\n    } else {\n      return touchableHandleStartShouldSetResponder.call(this, e);\n    }\n  },\n  touchableHandleResponderTerminationRequest(e) {\n    const {\n      onResponderTerminationRequest\n    } = this.props;\n    if (onResponderTerminationRequest) {\n      return onResponderTerminationRequest(e);\n    } else {\n      return touchableHandleResponderTerminationRequest.call(this, e);\n    }\n  },\n  touchableHandleResponderGrant(e) {\n    const {\n      onResponderGrant\n    } = this.props;\n    if (onResponderGrant) {\n      return onResponderGrant(e);\n    } else {\n      return touchableHandleResponderGrant.call(this, e);\n    }\n  },\n  touchableHandleResponderMove(e) {\n    const {\n      onResponderMove\n    } = this.props;\n    if (onResponderMove) {\n      return onResponderMove(e);\n    } else {\n      return touchableHandleResponderMove.call(this, e);\n    }\n  },\n  touchableHandleResponderRelease(e) {\n    const {\n      onResponderRelease\n    } = this.props;\n    if (onResponderRelease) {\n      return onResponderRelease(e);\n    } else {\n      return touchableHandleResponderRelease.call(this, e);\n    }\n  },\n  touchableHandleResponderTerminate(e) {\n    const {\n      onResponderTerminate\n    } = this.props;\n    if (onResponderTerminate) {\n      return onResponderTerminate(e);\n    } else {\n      return touchableHandleResponderTerminate.call(this, e);\n    }\n  },\n  touchableHandlePress(e) {\n    const {\n      onPress\n    } = this.props;\n    onPress && onPress(e);\n  },\n  touchableHandleActivePressIn(e) {\n    const {\n      onPressIn\n    } = this.props;\n    onPressIn && onPressIn(e);\n  },\n  touchableHandleActivePressOut(e) {\n    const {\n      onPressOut\n    } = this.props;\n    onPressOut && onPressOut(e);\n  },\n  touchableHandleLongPress(e) {\n    const {\n      onLongPress\n    } = this.props;\n    onLongPress && onLongPress(e);\n  },\n  touchableGetPressRectOffset() {\n    const {\n      pressRetentionOffset\n    } = this.props;\n    return pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n  touchableGetHitSlop() {\n    const {\n      hitSlop\n    } = this.props;\n    return hitSlop;\n  },\n  touchableGetHighlightDelayMS() {\n    const {\n      delayPressIn\n    } = this.props;\n    return delayPressIn || 0;\n  },\n  touchableGetLongPressDelayMS() {\n    const {\n      delayLongPress\n    } = this.props;\n    return delayLongPress === 0 ? 0 : delayLongPress || 500;\n  },\n  touchableGetPressOutDelayMS() {\n    const {\n      delayPressOut\n    } = this.props;\n    return delayPressOut || 0;\n  }\n});\nconst touchKeys = Object.keys(SvgTouchableMixin);\nconst touchVals = touchKeys.map(key => SvgTouchableMixin[key]);\nconst numTouchKeys = touchKeys.length;\nexport default target => {\n  for (let i = 0; i < numTouchKeys; i++) {\n    const key = touchKeys[i];\n    const val = touchVals[i];\n    if (typeof val === 'function') {\n      target[key] = val.bind(target);\n    } else {\n      target[key] = val;\n    }\n  }\n  target.state = touchableGetInitialState();\n};","map":{"version":3,"names":["PRESS_RETENTION_OFFSET","top","left","right","bottom","Mixin","Touchable","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","touchableGetInitialState","SvgTouchableMixin","Object","assign","e","onStartShouldSetResponder","props","call","onResponderTerminationRequest","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","touchableHandlePress","onPress","touchableHandleActivePressIn","onPressIn","touchableHandleActivePressOut","onPressOut","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","delayPressOut","touchKeys","keys","touchVals","map","key","numTouchKeys","length","target","i","val","bind","state"],"sources":["C:\\StockMarketApp2\\node_modules\\react-native-svg\\src\\lib\\SvgTouchableMixin.ts"],"sourcesContent":["import type { GestureResponderEvent } from 'react-native';\nimport { Touchable } from 'react-native';\nconst PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };\n// @ts-expect-error: Mixin is not typed\nconst { Mixin } = Touchable;\nconst {\n  touchableHandleStartShouldSetResponder,\n  touchableHandleResponderTerminationRequest,\n  touchableHandleResponderGrant,\n  touchableHandleResponderMove,\n  touchableHandleResponderRelease,\n  touchableHandleResponderTerminate,\n  touchableGetInitialState,\n} = Mixin;\n\nconst SvgTouchableMixin = {\n  ...Mixin,\n\n  touchableHandleStartShouldSetResponder(e: GestureResponderEvent) {\n    const { onStartShouldSetResponder } = this.props;\n    if (onStartShouldSetResponder) {\n      return onStartShouldSetResponder(e);\n    } else {\n      return touchableHandleStartShouldSetResponder.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminationRequest(e: GestureResponderEvent) {\n    const { onResponderTerminationRequest } = this.props;\n    if (onResponderTerminationRequest) {\n      return onResponderTerminationRequest(e);\n    } else {\n      return touchableHandleResponderTerminationRequest.call(this, e);\n    }\n  },\n\n  touchableHandleResponderGrant(e: GestureResponderEvent) {\n    const { onResponderGrant } = this.props;\n    if (onResponderGrant) {\n      return onResponderGrant(e);\n    } else {\n      return touchableHandleResponderGrant.call(this, e);\n    }\n  },\n\n  touchableHandleResponderMove(e: GestureResponderEvent) {\n    const { onResponderMove } = this.props;\n    if (onResponderMove) {\n      return onResponderMove(e);\n    } else {\n      return touchableHandleResponderMove.call(this, e);\n    }\n  },\n\n  touchableHandleResponderRelease(e: GestureResponderEvent) {\n    const { onResponderRelease } = this.props;\n    if (onResponderRelease) {\n      return onResponderRelease(e);\n    } else {\n      return touchableHandleResponderRelease.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminate(e: GestureResponderEvent) {\n    const { onResponderTerminate } = this.props;\n    if (onResponderTerminate) {\n      return onResponderTerminate(e);\n    } else {\n      return touchableHandleResponderTerminate.call(this, e);\n    }\n  },\n\n  touchableHandlePress(e: GestureResponderEvent) {\n    const { onPress } = this.props;\n    onPress && onPress(e);\n  },\n\n  touchableHandleActivePressIn(e: GestureResponderEvent) {\n    const { onPressIn } = this.props;\n    onPressIn && onPressIn(e);\n  },\n\n  touchableHandleActivePressOut(e: GestureResponderEvent) {\n    const { onPressOut } = this.props;\n    onPressOut && onPressOut(e);\n  },\n\n  touchableHandleLongPress(e: GestureResponderEvent) {\n    const { onLongPress } = this.props;\n    onLongPress && onLongPress(e);\n  },\n\n  touchableGetPressRectOffset() {\n    const { pressRetentionOffset } = this.props;\n    return pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop() {\n    const { hitSlop } = this.props;\n    return hitSlop;\n  },\n\n  touchableGetHighlightDelayMS() {\n    const { delayPressIn } = this.props;\n    return delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS() {\n    const { delayLongPress } = this.props;\n    return delayLongPress === 0 ? 0 : delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS() {\n    const { delayPressOut } = this.props;\n    return delayPressOut || 0;\n  },\n};\n\nconst touchKeys = Object.keys(SvgTouchableMixin);\nconst touchVals = touchKeys.map((key) => SvgTouchableMixin[key]);\nconst numTouchKeys = touchKeys.length;\n\nexport default (target: { [x: string]: unknown; state: unknown }) => {\n  for (let i = 0; i < numTouchKeys; i++) {\n    const key = touchKeys[i];\n    const val = touchVals[i];\n    if (typeof val === 'function') {\n      target[key] = val.bind(target);\n    } else {\n      target[key] = val;\n    }\n  }\n  target.state = touchableGetInitialState();\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}