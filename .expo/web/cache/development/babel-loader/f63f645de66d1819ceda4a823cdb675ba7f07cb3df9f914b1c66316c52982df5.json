{"ast":null,"code":"function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nimport * as React from 'react';\nimport { Component, useEffect, useMemo, useState } from 'react';\nimport { fetchText } from './utils/fetchData';\nimport { tags } from './xmlTags';\nfunction missingTag() {\n  return null;\n}\nexport function SvgAst({\n  ast,\n  override\n}) {\n  if (!ast) {\n    return null;\n  }\n  const {\n    props,\n    children\n  } = ast;\n  const Svg = tags.svg;\n  return React.createElement(Svg, _extends({}, props, override), children);\n}\nconst err = console.error.bind(console);\nexport function SvgXml(props) {\n  const {\n    onError = err,\n    xml,\n    override,\n    fallback\n  } = props;\n  try {\n    const ast = useMemo(() => xml !== null ? parse(xml) : null, [xml]);\n    return React.createElement(SvgAst, {\n      ast: ast,\n      override: override || props\n    });\n  } catch (error) {\n    onError(error);\n    return fallback ?? null;\n  }\n}\nexport function SvgUri(props) {\n  const {\n    onError = err,\n    uri,\n    onLoad,\n    fallback\n  } = props;\n  const [xml, setXml] = useState(null);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    uri ? fetchText(uri).then(data => {\n      setXml(data);\n      isError && setIsError(false);\n      onLoad === null || onLoad === void 0 || onLoad();\n    }).catch(e => {\n      onError(e);\n      setIsError(true);\n    }) : setXml(null);\n  }, [onError, uri, onLoad]);\n  if (isError) {\n    return fallback ?? null;\n  }\n  return React.createElement(SvgXml, {\n    xml: xml,\n    override: props,\n    fallback: fallback\n  });\n}\nexport class SvgFromXml extends Component {\n  state = {\n    ast: null\n  };\n  componentDidMount() {\n    this.parse(this.props.xml);\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      xml\n    } = this.props;\n    if (xml !== prevProps.xml) {\n      this.parse(xml);\n    }\n  }\n  parse(xml) {\n    const {\n      onError = err\n    } = this.props;\n    try {\n      this.setState({\n        ast: xml ? parse(xml) : null\n      });\n    } catch (e) {\n      const error = e;\n      onError(Object.assign({}, error, {\n        message: `[RNSVG] Couldn't parse SVG, reason: ${error.message}`\n      }));\n    }\n  }\n  render() {\n    const {\n      props,\n      state: {\n        ast\n      }\n    } = this;\n    return React.createElement(SvgAst, {\n      ast: ast,\n      override: props.override || props\n    });\n  }\n}\nexport class SvgFromUri extends Component {\n  state = {\n    xml: null\n  };\n  componentDidMount() {\n    this.fetch(this.props.uri);\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      uri\n    } = this.props;\n    if (uri !== prevProps.uri) {\n      this.fetch(uri);\n    }\n  }\n  async fetch(uri) {\n    try {\n      this.setState({\n        xml: uri ? await fetchText(uri) : null\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  render() {\n    const {\n      props,\n      state: {\n        xml\n      }\n    } = this;\n    return React.createElement(SvgFromXml, {\n      xml: xml,\n      override: props,\n      onError: props.onError\n    });\n  }\n}\nconst upperCase = (_match, letter) => letter.toUpperCase();\nexport const camelCase = phrase => phrase.replace(/[:-]([a-z])/g, upperCase);\nexport function getStyle(string) {\n  const style = {};\n  const declarations = string.split(';').filter(v => v.trim());\n  const {\n    length\n  } = declarations;\n  for (let i = 0; i < length; i++) {\n    const declaration = declarations[i];\n    if (declaration.length !== 0) {\n      const split = declaration.split(':');\n      const property = split[0];\n      const value = split[1];\n      style[camelCase(property.trim())] = value.trim();\n    }\n  }\n  return style;\n}\nexport function astToReact(value, index) {\n  if (typeof value === 'object') {\n    const {\n      Tag,\n      props,\n      children\n    } = value;\n    if (props !== null && props !== void 0 && props.class) {\n      props.className = props.class;\n      delete props.class;\n    }\n    return React.createElement(Tag, _extends({\n      key: index\n    }, props), children.map(astToReact));\n  }\n  return value;\n}\nfunction repeat(str, i) {\n  let result = '';\n  while (i--) {\n    result += str;\n  }\n  return result;\n}\nconst toSpaces = tabs => repeat('  ', tabs.length);\nfunction locate(source, i) {\n  const lines = source.split('\\n');\n  const nLines = lines.length;\n  let column = i;\n  let line = 0;\n  for (; line < nLines; line++) {\n    const {\n      length\n    } = lines[line];\n    if (column >= length) {\n      column -= length;\n    } else {\n      break;\n    }\n  }\n  const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n  const beforeExec = /(^|\\n).*$/.exec(before);\n  const beforeLine = beforeExec && beforeExec[0] || '';\n  const after = source.slice(i);\n  const afterExec = /.*(\\n|$)/.exec(after);\n  const afterLine = afterExec && afterExec[0];\n  const pad = repeat(' ', beforeLine.length);\n  const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n  return {\n    line,\n    column,\n    snippet\n  };\n}\nconst validNameCharacters = /[a-zA-Z0-9:_-]/;\nconst commentStart = /<!--/;\nconst whitespace = /[\\s\\t\\r\\n]/;\nconst quotemarks = /['\"]/;\nexport function parse(source, middleware) {\n  const length = source.length;\n  let currentElement = null;\n  let state = metadata;\n  let children = null;\n  let root;\n  const stack = [];\n  function error(message) {\n    const {\n      line,\n      column,\n      snippet\n    } = locate(source, i);\n    throw new Error(`${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`);\n  }\n  function metadata() {\n    while (i + 1 < length && (source[i] !== '<' || !(validNameCharacters.test(source[i + 1]) || commentStart.test(source.slice(i, i + 4))))) {\n      i++;\n    }\n    return neutral();\n  }\n  function neutral() {\n    let text = '';\n    let char;\n    while (i < length && (char = source[i]) !== '<') {\n      text += char;\n      i += 1;\n    }\n    if (/\\S/.test(text)) {\n      children.push(text);\n    }\n    if (source[i] === '<') {\n      return openingTag;\n    }\n    return neutral;\n  }\n  function openingTag() {\n    const char = source[i];\n    if (char === '?') {\n      return neutral;\n    }\n    if (char === '!') {\n      const start = i + 1;\n      if (source.slice(start, i + 3) === '--') {\n        return comment;\n      }\n      const end = i + 8;\n      if (source.slice(start, end) === '[CDATA[') {\n        return cdata;\n      }\n      if (/doctype/i.test(source.slice(start, end))) {\n        return neutral;\n      }\n    }\n    if (char === '/') {\n      return closingTag;\n    }\n    const tag = getName();\n    const props = {};\n    const element = {\n      tag,\n      props,\n      children: [],\n      parent: currentElement,\n      Tag: tags[tag] || missingTag\n    };\n    if (currentElement) {\n      children.push(element);\n    } else {\n      root = element;\n    }\n    getAttributes(props);\n    const {\n      style\n    } = props;\n    if (typeof style === 'string') {\n      element.styles = style;\n      props.style = getStyle(style);\n    }\n    let selfClosing = false;\n    if (source[i] === '/') {\n      i += 1;\n      selfClosing = true;\n    }\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n    if (!selfClosing) {\n      currentElement = element;\n      ({\n        children\n      } = element);\n      stack.push(element);\n    }\n    return neutral;\n  }\n  function comment() {\n    const index = source.indexOf('-->', i);\n    if (!~index) {\n      error('expected -->');\n    }\n    i = index + 2;\n    return neutral;\n  }\n  function cdata() {\n    const index = source.indexOf(']]>', i);\n    if (!~index) {\n      error('expected ]]>');\n    }\n    children.push(source.slice(i + 7, index));\n    i = index + 2;\n    return neutral;\n  }\n  function closingTag() {\n    const tag = getName();\n    if (!tag) {\n      error('Expected tag name');\n    }\n    if (currentElement && tag !== currentElement.tag) {\n      error(`Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`);\n    }\n    allowSpaces();\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n    stack.pop();\n    currentElement = stack[stack.length - 1];\n    if (currentElement) {\n      ({\n        children\n      } = currentElement);\n    }\n    return neutral;\n  }\n  function getName() {\n    let name = '';\n    let char;\n    while (i < length && validNameCharacters.test(char = source[i])) {\n      name += char;\n      i += 1;\n    }\n    return name;\n  }\n  function getAttributes(props) {\n    while (i < length) {\n      if (!whitespace.test(source[i])) {\n        return;\n      }\n      allowSpaces();\n      const name = getName();\n      if (!name) {\n        return;\n      }\n      let value = true;\n      allowSpaces();\n      if (source[i] === '=') {\n        i += 1;\n        allowSpaces();\n        value = getAttributeValue();\n        if (!isNaN(+value) && value.trim() !== '') {\n          value = +value;\n        }\n      }\n      props[camelCase(name)] = value;\n    }\n  }\n  function getAttributeValue() {\n    return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n  }\n  function getUnquotedAttributeValue() {\n    let value = '';\n    do {\n      const char = source[i];\n      if (char === ' ' || char === '>' || char === '/') {\n        return value;\n      }\n      value += char;\n      i += 1;\n    } while (i < length);\n    return value;\n  }\n  function getQuotedAttributeValue() {\n    const quotemark = source[i++];\n    let value = '';\n    let escaped = false;\n    while (i < length) {\n      const char = source[i++];\n      if (char === quotemark && !escaped) {\n        return value;\n      }\n      if (char === '\\\\' && !escaped) {\n        escaped = true;\n      }\n      value += escaped ? `\\\\${char}` : char;\n      escaped = false;\n    }\n    return value;\n  }\n  function allowSpaces() {\n    while (i < length && whitespace.test(source[i])) {\n      i += 1;\n    }\n  }\n  let i = 0;\n  while (i < length) {\n    if (!state) {\n      error('Unexpected character');\n    }\n    state = state();\n    i += 1;\n  }\n  if (state !== neutral) {\n    error('Unexpected end of input');\n  }\n  if (root) {\n    const xml = (middleware ? middleware(root) : root) || root;\n    const ast = xml.children.map(astToReact);\n    const jsx = xml;\n    jsx.children = ast;\n    return jsx;\n  }\n  return null;\n}\nexport { tags };","map":{"version":3,"names":["React","Component","useEffect","useMemo","useState","fetchText","tags","missingTag","SvgAst","ast","override","props","children","Svg","svg","createElement","_extends","err","console","error","bind","SvgXml","onError","xml","fallback","parse","SvgUri","uri","onLoad","setXml","isError","setIsError","then","data","catch","e","SvgFromXml","state","componentDidMount","componentDidUpdate","prevProps","setState","Object","assign","message","render","SvgFromUri","fetch","upperCase","_match","letter","toUpperCase","camelCase","phrase","replace","getStyle","string","style","declarations","split","filter","v","trim","length","i","declaration","property","value","astToReact","index","Tag","class","className","key","map","repeat","str","result","toSpaces","tabs","locate","source","lines","nLines","column","line","before","slice","beforeExec","exec","beforeLine","after","afterExec","afterLine","pad","snippet","validNameCharacters","commentStart","whitespace","quotemarks","middleware","currentElement","metadata","root","stack","Error","test","neutral","text","char","push","openingTag","start","comment","end","cdata","closingTag","tag","getName","element","parent","getAttributes","styles","selfClosing","indexOf","allowSpaces","pop","name","getAttributeValue","isNaN","getQuotedAttributeValue","getUnquotedAttributeValue","quotemark","escaped","jsx"],"sources":["C:\\StockMarketApp2\\node_modules\\react-native-svg\\src\\xml.tsx"],"sourcesContent":["import type { ComponentType, ComponentProps } from 'react';\nimport * as React from 'react';\nimport { Component, useEffect, useMemo, useState } from 'react';\nimport { fetchText } from './utils/fetchData';\nimport type { SvgProps } from './elements/Svg';\nimport { tags } from './xmlTags';\n\nfunction missingTag() {\n  return null;\n}\n\ntype Tag = ComponentType<ComponentProps<(typeof tags)[keyof typeof tags]>>;\nexport interface AST {\n  tag: string;\n  style?: Styles;\n  styles?: string;\n  priority?: Map<string, boolean | undefined>;\n  parent: AST | null;\n  children: (AST | string)[] | (JSX.Element | string)[];\n  props: {\n    [prop: string]: Styles | string | undefined;\n  };\n  Tag: Tag;\n}\n\nexport interface XmlAST extends AST {\n  children: (XmlAST | string)[];\n  parent: XmlAST | null;\n}\n\nexport interface JsxAST extends AST {\n  children: (JSX.Element | string)[];\n}\n\nexport type AdditionalProps = {\n  onError?: (error: Error) => void;\n  override?: object;\n  onLoad?: () => void;\n  fallback?: JSX.Element;\n};\n\nexport type UriProps = SvgProps & { uri: string | null } & AdditionalProps;\nexport type UriState = { xml: string | null };\n\nexport type XmlProps = SvgProps & { xml: string | null } & AdditionalProps;\nexport type XmlState = { ast: JsxAST | null };\n\nexport type AstProps = SvgProps & { ast: JsxAST | null } & AdditionalProps;\n\nexport function SvgAst({ ast, override }: AstProps) {\n  if (!ast) {\n    return null;\n  }\n  const { props, children } = ast;\n\n  const Svg = tags.svg;\n\n  return (\n    <Svg {...props} {...override}>\n      {children}\n    </Svg>\n  );\n}\n\nconst err = console.error.bind(console);\n\nexport function SvgXml(props: XmlProps) {\n  const { onError = err, xml, override, fallback } = props;\n\n  try {\n    const ast = useMemo<JsxAST | null>(\n      () => (xml !== null ? parse(xml) : null),\n      [xml]\n    );\n    return <SvgAst ast={ast} override={override || props} />;\n  } catch (error) {\n    onError(error);\n    return fallback ?? null;\n  }\n}\n\nexport function SvgUri(props: UriProps) {\n  const { onError = err, uri, onLoad, fallback } = props;\n  const [xml, setXml] = useState<string | null>(null);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    uri\n      ? fetchText(uri)\n          .then((data) => {\n            setXml(data);\n            isError && setIsError(false);\n            onLoad?.();\n          })\n          .catch((e) => {\n            onError(e);\n            setIsError(true);\n          })\n      : setXml(null);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onError, uri, onLoad]);\n  if (isError) {\n    return fallback ?? null;\n  }\n  return <SvgXml xml={xml} override={props} fallback={fallback} />;\n}\n\n// Extending Component is required for Animated support.\n\nexport class SvgFromXml extends Component<XmlProps, XmlState> {\n  state = { ast: null };\n  componentDidMount() {\n    this.parse(this.props.xml);\n  }\n\n  componentDidUpdate(prevProps: { xml: string | null }) {\n    const { xml } = this.props;\n    if (xml !== prevProps.xml) {\n      this.parse(xml);\n    }\n  }\n\n  parse(xml: string | null) {\n    const { onError = err } = this.props;\n    try {\n      this.setState({ ast: xml ? parse(xml) : null });\n    } catch (e) {\n      const error = e as Error;\n      onError({\n        ...error,\n        message: `[RNSVG] Couldn't parse SVG, reason: ${error.message}`,\n      });\n    }\n  }\n\n  render() {\n    const {\n      props,\n      state: { ast },\n    } = this;\n    return <SvgAst ast={ast} override={props.override || props} />;\n  }\n}\n\nexport class SvgFromUri extends Component<UriProps, UriState> {\n  state = { xml: null };\n  componentDidMount() {\n    this.fetch(this.props.uri);\n  }\n\n  componentDidUpdate(prevProps: { uri: string | null }) {\n    const { uri } = this.props;\n    if (uri !== prevProps.uri) {\n      this.fetch(uri);\n    }\n  }\n\n  async fetch(uri: string | null) {\n    try {\n      this.setState({ xml: uri ? await fetchText(uri) : null });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const {\n      props,\n      state: { xml },\n    } = this;\n    return <SvgFromXml xml={xml} override={props} onError={props.onError} />;\n  }\n}\n\nconst upperCase = (_match: string, letter: string) => letter.toUpperCase();\n\nexport const camelCase = (phrase: string) =>\n  phrase.replace(/[:-]([a-z])/g, upperCase);\n\nexport type Styles = { [property: string]: string };\n\nexport function getStyle(string: string): Styles {\n  const style: Styles = {};\n  const declarations = string.split(';').filter((v) => v.trim());\n  const { length } = declarations;\n  for (let i = 0; i < length; i++) {\n    const declaration = declarations[i];\n    if (declaration.length !== 0) {\n      const split = declaration.split(':');\n      const property = split[0];\n      const value = split[1];\n      style[camelCase(property.trim())] = value.trim();\n    }\n  }\n  return style;\n}\n\nexport function astToReact(\n  value: AST | string,\n  index: number\n): JSX.Element | string {\n  if (typeof value === 'object') {\n    const { Tag, props, children } = value;\n    if (props?.class) {\n      props.className = props.class;\n      delete props.class;\n    }\n\n    return (\n      <Tag key={index} {...props}>\n        {(children as (AST | string)[]).map(astToReact)}\n      </Tag>\n    );\n  }\n  return value;\n}\n\n// slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\nfunction repeat(str: string, i: number) {\n  let result = '';\n  while (i--) {\n    result += str;\n  }\n  return result;\n}\n\nconst toSpaces = (tabs: string) => repeat('  ', tabs.length);\n\nfunction locate(source: string, i: number) {\n  const lines = source.split('\\n');\n  const nLines = lines.length;\n  let column = i;\n  let line = 0;\n  for (; line < nLines; line++) {\n    const { length } = lines[line];\n    if (column >= length) {\n      column -= length;\n    } else {\n      break;\n    }\n  }\n  const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n  const beforeExec = /(^|\\n).*$/.exec(before);\n  const beforeLine = (beforeExec && beforeExec[0]) || '';\n  const after = source.slice(i);\n  const afterExec = /.*(\\n|$)/.exec(after);\n  const afterLine = afterExec && afterExec[0];\n  const pad = repeat(' ', beforeLine.length);\n  const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n  return { line, column, snippet };\n}\n\nconst validNameCharacters = /[a-zA-Z0-9:_-]/;\nconst commentStart = /<!--/;\nconst whitespace = /[\\s\\t\\r\\n]/;\nconst quotemarks = /['\"]/;\n\nexport type Middleware = (ast: XmlAST) => XmlAST;\n\nexport function parse(source: string, middleware?: Middleware): JsxAST | null {\n  const length = source.length;\n  let currentElement: XmlAST | null = null;\n  let state = metadata;\n  let children = null;\n  let root: XmlAST | undefined;\n  const stack: XmlAST[] = [];\n\n  function error(message: string) {\n    const { line, column, snippet } = locate(source, i);\n    throw new Error(\n      `${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`\n    );\n  }\n\n  function metadata() {\n    while (\n      i + 1 < length &&\n      (source[i] !== '<' ||\n        !(\n          validNameCharacters.test(source[i + 1]) ||\n          commentStart.test(source.slice(i, i + 4))\n        ))\n    ) {\n      i++;\n    }\n\n    return neutral();\n  }\n\n  function neutral() {\n    let text = '';\n    let char;\n    while (i < length && (char = source[i]) !== '<') {\n      text += char;\n      i += 1;\n    }\n\n    if (/\\S/.test(text)) {\n      children.push(text);\n    }\n\n    if (source[i] === '<') {\n      return openingTag;\n    }\n\n    return neutral;\n  }\n\n  function openingTag() {\n    const char = source[i];\n\n    if (char === '?') {\n      return neutral;\n    } // <?xml...\n\n    if (char === '!') {\n      const start = i + 1;\n      if (source.slice(start, i + 3) === '--') {\n        return comment;\n      }\n      const end = i + 8;\n      if (source.slice(start, end) === '[CDATA[') {\n        return cdata;\n      }\n      if (/doctype/i.test(source.slice(start, end))) {\n        return neutral;\n      }\n    }\n\n    if (char === '/') {\n      return closingTag;\n    }\n\n    const tag = getName() as keyof typeof tags;\n    const props: { [prop: string]: Styles | string | undefined } = {};\n    const element: XmlAST = {\n      tag,\n      props,\n      children: [],\n      parent: currentElement,\n      Tag: (tags[tag] || missingTag) as Tag,\n    };\n\n    if (currentElement) {\n      children.push(element);\n    } else {\n      root = element;\n    }\n\n    getAttributes(props);\n\n    const { style } = props;\n    if (typeof style === 'string') {\n      element.styles = style;\n      props.style = getStyle(style);\n    }\n\n    let selfClosing = false;\n\n    if (source[i] === '/') {\n      i += 1;\n      selfClosing = true;\n    }\n\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    if (!selfClosing) {\n      currentElement = element;\n      ({ children } = element);\n      stack.push(element);\n    }\n\n    return neutral;\n  }\n\n  function comment() {\n    const index = source.indexOf('-->', i);\n    if (!~index) {\n      error('expected -->');\n    }\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function cdata() {\n    const index = source.indexOf(']]>', i);\n    if (!~index) {\n      error('expected ]]>');\n    }\n\n    children.push(source.slice(i + 7, index));\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function closingTag() {\n    const tag = getName();\n\n    if (!tag) {\n      error('Expected tag name');\n    }\n\n    if (currentElement && tag !== currentElement.tag) {\n      error(\n        `Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`\n      );\n    }\n\n    allowSpaces();\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    stack.pop();\n    currentElement = stack[stack.length - 1];\n    if (currentElement) {\n      ({ children } = currentElement);\n    }\n\n    return neutral;\n  }\n\n  function getName() {\n    let name = '';\n    let char;\n    while (i < length && validNameCharacters.test((char = source[i]))) {\n      name += char;\n      i += 1;\n    }\n\n    return name;\n  }\n\n  function getAttributes(props: {\n    [x: string]: Styles | string | number | boolean | undefined;\n    style?: string | Styles | undefined;\n  }) {\n    while (i < length) {\n      if (!whitespace.test(source[i])) {\n        return;\n      }\n      allowSpaces();\n\n      const name = getName();\n      if (!name) {\n        return;\n      }\n\n      let value: boolean | number | string = true;\n\n      allowSpaces();\n      if (source[i] === '=') {\n        i += 1;\n        allowSpaces();\n\n        value = getAttributeValue();\n        if (!isNaN(+value) && value.trim() !== '') {\n          value = +value;\n        }\n      }\n\n      props[camelCase(name)] = value;\n    }\n  }\n\n  function getAttributeValue(): string {\n    return quotemarks.test(source[i])\n      ? getQuotedAttributeValue()\n      : getUnquotedAttributeValue();\n  }\n\n  function getUnquotedAttributeValue() {\n    let value = '';\n    do {\n      const char = source[i];\n      if (char === ' ' || char === '>' || char === '/') {\n        return value;\n      }\n\n      value += char;\n      i += 1;\n    } while (i < length);\n\n    return value;\n  }\n\n  function getQuotedAttributeValue() {\n    const quotemark = source[i++];\n\n    let value = '';\n    let escaped = false;\n\n    while (i < length) {\n      const char = source[i++];\n      if (char === quotemark && !escaped) {\n        return value;\n      }\n\n      if (char === '\\\\' && !escaped) {\n        escaped = true;\n      }\n\n      value += escaped ? `\\\\${char}` : char;\n      escaped = false;\n    }\n\n    return value;\n  }\n\n  function allowSpaces() {\n    while (i < length && whitespace.test(source[i])) {\n      i += 1;\n    }\n  }\n\n  let i = 0;\n  while (i < length) {\n    if (!state) {\n      error('Unexpected character');\n    }\n    state = state();\n    i += 1;\n  }\n\n  if (state !== neutral) {\n    error('Unexpected end of input');\n  }\n\n  if (root) {\n    const xml: XmlAST = (middleware ? middleware(root) : root) || root;\n    const ast: (JSX.Element | string)[] = xml.children.map(astToReact);\n    const jsx: JsxAST = xml as JsxAST;\n    jsx.children = ast;\n    return jsx;\n  }\n\n  return null;\n}\nexport { tags };\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}